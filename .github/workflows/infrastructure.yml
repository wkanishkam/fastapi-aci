name: Infrastructure Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

env:
  TF_VERSION: "1.6.0"
  WORKING_DIR: "./infra"

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init
      env:
        ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    - name: Terraform Format Check
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: github.event.inputs.action == 'plan'
      run: |
        terraform plan \
          -var="environment=${{ github.event.inputs.environment }}" \
          -out=tfplan
      env:
        ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
        TF_VAR_prefix: fastapi-${{ github.event.inputs.environment }}

    - name: Upload Plan Artifact
      if: github.event.inputs.action == 'plan'
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-${{ github.event.inputs.environment }}
        path: ${{ env.WORKING_DIR }}/tfplan

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: |
        terraform apply \
          -var="environment=${{ github.event.inputs.environment }}" \
          -auto-approve
      env:
        ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
        TF_VAR_prefix: fastapi-${{ github.event.inputs.environment }}

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: |
        terraform destroy \
          -var="environment=${{ github.event.inputs.environment }}" \
          -auto-approve
      env:
        ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
        TF_VAR_prefix: fastapi-${{ github.event.inputs.environment }}

    - name: Output Infrastructure Details
      if: github.event.inputs.action == 'apply'
      run: |
        echo "## Infrastructure Outputs" >> $GITHUB_STEP_SUMMARY
        echo "### ACR Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Login Server:** $(terraform output -raw acr_login_server)" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry Name:** $(terraform output -raw acr_name)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Container Instance Details" >> $GITHUB_STEP_SUMMARY
        echo "- **FQDN:** $(terraform output -raw container_group_fqdn)" >> $GITHUB_STEP_SUMMARY
        echo "- **IP Address:** $(terraform output -raw container_group_ip)" >> $GITHUB_STEP_SUMMARY
        echo "- **Application URL:** http://$(terraform output -raw container_group_fqdn):8000" >> $GITHUB_STEP_SUMMARY